# =============================================================================
# ENVIRONMENT VARIABLES EXAMPLE
# =============================================================================

# Copy this file to .env.local and fill in your actual values
# Environment variables provide the most secure way to store API keys

# =============================================================================
# SECURITY NOTICE
# =============================================================================
# API keys stored in environment variables are:
# - NOT exposed to client-side JavaScript in production builds
# - NOT accessible via XSS attacks
# - NOT stored in localStorage or browser storage
# - Only available at build time and injected into the application securely

# =============================================================================
# SUPABASE CONFIGURATION (Optional - for cloud sync)
# =============================================================================
# Get these values from your Supabase project dashboard
VITE_SUPABASE_URL=your_supabase_project_url
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key

# =============================================================================
# GOOGLE GEMINI AI CONFIGURATION (Optional - for AI features)
# =============================================================================
# This is the RECOMMENDED and MOST SECURE way to configure your Gemini API key
# Get your API key from: https://makersuite.google.com/app/apikey
#
# When set via environment variable:
# - The key is automatically loaded and used securely
# - Manual input in the UI is disabled for security
# - The key cannot be extracted via XSS attacks
VITE_GEMINI_API_KEY=your_gemini_api_key

# =============================================================================
# OPENAI API CONFIGURATION (Optional - for future AI features)
# =============================================================================
# For future OpenAI integration (currently not implemented)
# Get your API key from: https://platform.openai.com/api-keys
VITE_OPENAI_API_KEY=your_openai_api_key

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
VITE_APP_VERSION=1.0.0
VITE_APP_NAME=Birch Lounge Recipe Manager

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================
NODE_ENV=development

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Enable additional security features in development
VITE_ENABLE_SECURITY_DEBUG=false
VITE_API_KEY_VALIDATION_STRICT=true

# =============================================================================
# MCP SERVICE CONFIGURATION
# =============================================================================

# Enable/disable specific MCP services
MCP_WEB_FETCH_ENABLED=true
MCP_EXCEL_ENABLED=true
MCP_DATABASE_ENABLED=false
MCP_SEARCH_ENABLED=false
MCP_NOTION_ENABLED=false
MCP_GITHUB_ENABLED=false
MCP_OPENAI_ENABLED=false

# =============================================================================
# 1. WEB FETCH MCP - Recipe Discovery & Scraping
# =============================================================================
# No API keys required - uses public web scraping

# Allowed domains for recipe scraping (comma-separated)
WEB_FETCH_ALLOWED_DOMAINS=liquor.com,diffordsguide.com,punchdrink.com,cocktaildb.com,thespruceeats.com

# Rate limiting (requests per minute)
WEB_FETCH_RATE_LIMIT=30

# =============================================================================
# 2. EXCEL MCP - Bulk Recipe Management
# =============================================================================
# No API keys required - uses local file operations

# Default export directory
EXCEL_EXPORT_DIR=./data/exports

# Default import directory
EXCEL_IMPORT_DIR=./data/imports

# =============================================================================
# 3. DATABASE MCP - Advanced Analytics (PostgreSQL)
# =============================================================================
# Requires PostgreSQL database setup

# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://localhost:5432/birch_lounge_analytics

# Database connection pool settings
DB_POOL_MIN=2
DB_POOL_MAX=10

# =============================================================================
# 4. SEARCH MCP - Real-time Recipe Discovery (Exa Search)
# =============================================================================
# Requires Exa Search API key - Get from: https://exa.ai/

EXA_API_KEY=your_exa_api_key_here

# Search configuration
SEARCH_RATE_LIMIT=100
SEARCH_CACHE_TTL=3600

# =============================================================================
# 5. NOTION MCP - Comprehensive Documentation
# =============================================================================
# Requires Notion integration - Get from: https://developers.notion.com/

NOTION_API_KEY=your_notion_api_key_here
NOTION_DATABASE_ID=your_notion_database_id_here

# =============================================================================
# 6. GITHUB MCP - Version Control & Collaboration
# =============================================================================
# Requires GitHub Personal Access Token - Get from: https://github.com/settings/tokens

GITHUB_TOKEN=your_github_personal_access_token_here
GITHUB_OWNER=your_github_username_here
GITHUB_REPO=birch-lounge-recipes

# =============================================================================
# 7. OPENAI MCP - Enhanced AI Capabilities
# =============================================================================
# Requires OpenAI API key - Get from: https://platform.openai.com/api-keys

OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=2000

# =============================================================================
# GENERAL MCP SETTINGS
# =============================================================================

# MCP service timeout (milliseconds)
MCP_TIMEOUT=30000

# Enable debug logging
MCP_DEBUG=false

# Cache directory for MCP services
MCP_CACHE_DIR=./data/cache

# Port for MCP services (if running as HTTP servers)
MCP_PORT=3001

# Enable CORS for development
MCP_CORS_ENABLED=true
